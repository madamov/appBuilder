name: Build macOS
description: 
inputs:
  version: 
    required: true
    type: string
  mode: 
    required: true
    type: string
  upload_url:
    required: true
    type: string
  deployment:
    required: true
    type: boolean
  build_dir:
    required: true
    type: string
  product_name:
    required: true
    type: string
  notarytool_keychain_profile:
    required: true
    type: string
  build_project_path:
    required: true
    type: string
  build_settings_path:
    required: true
    type: string
  build_product_folder_name:
    required: true
    type: string
  build_product_suffix:
    required: true
    type: string
outputs: 
    deployment:
      value: ${{ inputs.deployment }}
    upload_url:
      value: ${{ inputs.upload_url }}
    asset_path:
      value: ${{ steps.setup.outputs.asset_path }}
    asset_name:
      value: ${{ steps.setup.outputs.asset_name }}
    
runs:
  using: "composite"
  steps:
  
  - name: checkout compiler repo
    uses: actions/checkout@v4
    with:
      repository: miyako/4d-class-compiler
      path: compiler
  
  - name: compile project
    run: |
      tool4d.app/Contents/MacOS/tool4d ./compiler/Project/compiler.4DProject --skip-onstartup --startup-method=build --user-param="${PWD}/${BUILD_SETTINGS_PATH},${PWD}/${BUILD_PROJECT_PATH},../../${BUILD_DIR}" --dataless
    shell: bash
    env: 
      BUILD_DIR: ${{ inputs.build_dir }}
      BUILD_PROJECT_PATH: ${{ inputs.build_project_path }}
      BUILD_SETTINGS_PATH: ${{ inputs.build_settings_path }}
      
  - name: prepare for distribution
    if: ${{ inputs.deployment == 'true' }}
    run: |
      PRODUCT_PATH="${PWD}/${BUILD_DIR}/${BUILD_PRODUCT_FOLDER_NAME}/${PRODUCT_NAME}${BUILD_PRODUCT_SUFFIX}.app"
      DMG_PATH="${PWD}/${BUILD_DIR}/${BUILD_PRODUCT_FOLDER_NAME}/${PRODUCT_NAME}${BUILD_PRODUCT_SUFFIX}.dmg"
      rm -f "${DMG_PATH}"
      hdiutil create -format UDBZ -plist -srcfolder "${PRODUCT_PATH}" "${DMG_PATH}"
      xcrun notarytool submit --keychain-profile "${NOTARYTOOL_KEYCHAIN_PROFILE}" "${DMG_PATH}" --wait
      xcrun stapler staple "${DMG_PATH}"
    shell: bash
    env: 
      BUILD_DIR: ${{ inputs.build_dir }}
      PRODUCT_NAME: ${{ inputs.product_name }}
      NOTARYTOOL_KEYCHAIN_PROFILE: ${{ inputs.notarytool_keychain_profile }}
      BUILD_PRODUCT_FOLDER_NAME: ${{ inputs.build_product_folder_name }}
      BUILD_PRODUCT_SUFFIX: ${{ inputs.build_product_suffix }}

  - name: setup
    id: setup
    if: ${{ inputs.deployment == 'true' }}
    run: |
      echo "asset_name=${PRODUCT_NAME}${BUILD_PRODUCT_SUFFIX}.dmg" >> $GITHUB_OUTPUT
      echo "asset_path=./${BUILD_DIR}/${BUILD_PRODUCT_FOLDER_NAME}/${PRODUCT_NAME}${BUILD_PRODUCT_SUFFIX}.dmg" >> $GITHUB_OUTPUT
    shell: bash
    env: 
      BUILD_DIR: ${{ inputs.build_dir }}
      PRODUCT_NAME: ${{ inputs.product_name }}
      BUILD_PRODUCT_FOLDER_NAME: ${{ inputs.build_product_folder_name }}
      BUILD_PRODUCT_SUFFIX: ${{ inputs.build_product_suffix }}